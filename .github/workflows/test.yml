name: test

on:
  - push
  - pull_request

jobs:
  mocha:
    name: mocha
    strategy:
      matrix:
        node:
          - 12
          - 14
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn run lint
      - run: yarn run test
      - run: yarn run build
  karma-ch:
    name: karma on Chrome
    strategy:
      matrix:
        node:
          - 14
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn add -D karma-chrome-launcher
      - run: yarn karma start --single-run --browsers ChromeHeadlessNoSandbox
  karma-fx:
    name: karma on Firefox
    strategy:
      matrix:
        node:
          - 14
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn add -D karma-firefox-launcher
      - run: yarn karma start --single-run --browsers FirefoxHeadless
  karma-ie:
    name: karma on IE11
    strategy:
      matrix:
        node:
          - 14
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: yarn add -D karma-ie-launcher
      - run: yarn karma start --single-run --browsers IE
  karma-mobilesafari:
    name: karma on MobileSafari
    strategy:
      matrix:
        node:
          - 14
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: npm install -g yarn
      - run: yarn install --frozen-lockfile
      - run: xcrun simctl list
      - run: xcrun simctl list -j
      - run: |
          xcrun simctl list -j | jq '.devices[][] | select(.isAvailable == true) | { (.name): .udid }' | jq -s add
      - run: |
          xcrun simctl list -j | jq '.devices[][] | select(.isAvailable == true) | { (.name): .udid }' | jq -s add | jq -r '.["iPhone 12"]' | tee udid
      - run: xcrun simctl boot $(cat udid)
      - run: xcrun simctl openurl $(cat udid) http://127.0.0.1:9876 &
      - run: yarn karma start --single-run --no-browsers
